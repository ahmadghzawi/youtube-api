{"ast":null,"code":"'use strict';\n/**\n * Dispatch a request to the server using whichever adapter\n * is supported by the current environment.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\n\nmodule.exports = function dispatchRequest(config) {\n  return new Promise(function (resolve, reject) {\n    try {\n      // For browsers use XHR adapter\n      if (typeof XMLHttpRequest !== 'undefined' || typeof ActiveXObject !== 'undefined') {\n        require('../adapters/xhr')(resolve, reject, config);\n      } // For node use HTTP adapter\n      else if (typeof process !== 'undefined') {\n          require('../adapters/http')(resolve, reject, config);\n        }\n    } catch (e) {\n      reject(e);\n    }\n  });\n};","map":null,"metadata":{},"sourceType":"script"}